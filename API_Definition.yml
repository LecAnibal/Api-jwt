swagger: '2.0'
info:
  version: 1.0.0
  title: NANTI API
host: nanti.com
basePath: /customer/api/v1
tags:
  - name: User
    description: Everything about your Users
  - name: Sims
    description: Everything about your Sims
  - name: Purchase Order
    description: Everything about your Order
  - name: Customer Line
    description: Everything about your Customer Line
  - name: Service
    description: Everything about your services
  - name: Tariff
    description: Everything about your tariff

paths:
  /user/login:
    post:
      tags:
        - User
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: user
          required: true
          schema:
            $ref: '#/definitions/login'
      responses:
        '405':
          description: Invalid input
        '200':
          description: login

  /purchaseOrder:
    get:
      description: get order list
      tags:
        - Purchase Order
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '405':
          description: Invalid input
        '200':
          description: Lista de tus ordenes

  '/purchaseOrder/{orderId}/detail':
    get:
      tags:
        - Purchase Order
      parameters:
        - name: orderId
          in: path
          description: ID of pet to return
          required: true
          type: string
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '405':
          description: Invalid input
        '200':
          description: Lista de tus sims
  '/sim':
    get:
      tags:
        - Sims
      description : get Sim List

      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '405':
          description: Invalid input
        '200':
          description: detalle del sim

  '/sim/status':
    get:
      tags:
        - Sims
      description : get status Sim List

      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '405':
          description: Invalid input
        '200':
          description: detalle del sim



  '/sim/{id}/detail':
    get:
      description: get sim description and resume
      parameters:
        - name: id
          in: path
          description: reference to sim ?
          required: true
          type: string
      tags:
        - Sims
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '405':
          description: Invalid input
        '200':
          description: detalle del sim
  '/sim/{id}/eventList':
    get:
      tags:
        - Sims
      description : get all events about this sim
      parameters:
        - name: id
          in: path
          description: reference to sim ?
          required: true
          type: string
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '405':
          description: Invalid input
        '200':
          description: lista de los eventos del sims

  '/sim/{id}':
    put:
      tags:
        - Sims
      parameters:
        - name: id
          in: path
          description: reference to sim ?
          required: true
          type: string
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '405':
          description: Invalid input
        '200':
          description: activa el sim

  '/service':
    get:
      tags:
        - Service
      description: get customer service list
      produces:
        - application/json
      responses:
        '200':
          description: customer line array
  '/service/{id}/detail':
    get:
      tags:
        - Service
      parameters:
        - name: id
          in: path
          description: reference to service
          required: true
          type: string
      description: get customer service detail
      produces:
        - application/json
      responses:
        '200':
          description: customer line detail
  '/tariff':
    get:
      tags:
        - Tariff
      description: get customer tariff list
      produces:
        - application/json
      responses:
        '200':
          description: tariff array
  '/tariff/{id}/detail':
    get:
      tags:
        - Tariff
      parameters:
        - name: id
          in: path
          description: reference to service
          required: true
          type: string
      description: get customer tariff detail
      produces:
        - application/json
      responses:
        '200':
          description: tariff detail
  '/customerLine':
    get:
      tags:
        - Customer Line
      description: get customer line list
      produces:
        - application/json
      responses:
        '200':
          description: customer line array
          schema:
            $ref: '#/definitions/Order'
    post:
      tags:
        - Customer Line
      description: create a customer Line
      parameters:
        - in: body
          name: user
          required: true
          schema:
            $ref: '#/definitions/login'
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: customer line array

  '/customerLine/{id}':
    get:
      tags:
        - Customer Line
      parameters:
        - name: id
          in: path
          description: reference to customerLine
          required: true
          type: string
      description: get customer line list
      produces:
        - application/json
      responses:
        '200':
          description: customer line array

    put:
      tags:
        - Customer Line
      parameters:
        - name: id
          in: path
          description: reference to customerLine
          required: true
          type: string
      description: get customer line list
      produces:
        - application/json
      responses:
        '200':
          description: customer line array
          schema:
            $ref: '#/definitions/Order'

  '/customerLine/status':
    get:
      tags:
        - Customer Line
      description: get status list
      produces:
        - application/json
      responses:
        '200':
          description: status array



securityDefinitions:
  JWT:
    type: apiKey
    in: header
    name: access_token

definitions:
  login:
    type: object
    properties:
      user:
        type: string
      password:
        type: string
  Order:
    type: object
    properties:
      id:
        type: integer
        format: int64
      petId:
        type: integer
        format: int64
      quantity:
        type: integer
        format: int32
      shipDate:
        type: string
        format: date-time
      status:
        type: string
        description: Order Status
        enum:
          - placed
          - approved
          - delivered
      complete:
        type: boolean
        default: false
    xml:
      name: Order
  Category:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
    xml:
      name: Category
  User:
    type: object
    properties:
      id:
        type: integer
        format: int64
      username:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      email:
        type: string
      password:
        type: string
      phone:
        type: string
      userStatus:
        type: integer
        format: int32
        description: User Status
    xml:
      name: User
  Tag:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
    xml:
      name: Tag
  Pet:
    type: object
    required:
      - name
      - photoUrls
    properties:
      id:
        type: integer
        format: int64
      category:
        $ref: '#/definitions/Category'
      name:
        type: string
        example: doggie
      photoUrls:
        type: array
        xml:
          name: photoUrl
          wrapped: true
        items:
          type: string
      tags:
        type: array
        xml:
          name: tag
          wrapped: true
        items:
          $ref: '#/definitions/Tag'
      status:
        type: string
        description: pet status in the store
        enum:
          - available
          - pending
          - sold
    xml:
      name: Pet
  ApiResponse:
    type: object
    properties:
      code:
        type: integer
        format: int32
      type:
        type: string
      message:
        type: string